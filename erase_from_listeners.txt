// *more info at http://www.mkyong.com/java/how-to-copy-directory-in-java/*/
public static void copyFolder(File src, File dest) throws IOException {

		if (src.isDirectory()) {

			// if directory not exists, create it
			if (!dest.exists()) {
				dest.mkdir();
				System.out.println("Directory copied from " + src + "  to "
						+ dest);
			}

			// list all the directory contents
			String files[] = src.list();

			for (String file : files) {
				// construct the src and dest file structure
				File srcFile = new File(src, file);
				File destFile = new File(dest, file);
				// recursive copy
				copyFolder(srcFile, destFile);
			}

		} else {
			// if file, then copy it
			// Use bytes stream to support all file types
			/*
			 * InputStream in = new FileInputStream(src); OutputStream out = new
			 * FileOutputStream(dest);
			 * 
			 * byte[] buffer = new byte[1024];
			 * 
			 * int length; //copy the file content in bytes while ((length =
			 * in.read(buffer)) > 0){ out.write(buffer, 0, length); }
			 * 
			 * in.close(); out.close();
			 */

			Files.copy(src.toPath(), dest.toPath(),
					StandardCopyOption.REPLACE_EXISTING);

			/*
			 * try{ Files.copy( source, newdir.resolve(source.getFileName())); }
			 * catch (IOException e) { newdir =
			 * newdir.resolve(source.getFileName()); File temp =
			 * newdir.toFile(); if ( temp.exists() )
			 * System.out.println("File "+temp
			 * .getAbsolutePath()+" already exists"); }
			 */
			System.out.println("File " + src.getName() + " copied from "
					+ src.getAbsolutePath() + " to " + dest.getAbsolutePath());
		}
	}